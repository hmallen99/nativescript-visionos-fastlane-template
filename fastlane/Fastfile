fastlane_version '2.227.0'

# Specifies the platform to build and distribute for
platform :visionos do
  desc 'Fetch certificates and provisioning profiles'
  lane :certificates do
    match(type: "appstore")
  end

  desc 'Build the visionOS application.'
  lane :build do
    setup_ci if ENV['CI']
    sh("tns", "prepare", "visionos", "--release", "--clean", "--env.production")

    match(
      type: "appstore",
      git_basic_authorization: Base64.strict_encode64(ENV["GIT_AUTHORIZATION"]),
    )

    update_code_signing_settings(
      path: "./platforms/visionos/<your-scheme>.xcodeproj",
      use_automatic_signing: false,
      team_id: ENV["TEAM_ID"],
      code_sign_identity: "Apple Distribution",
      profile_name: ENV["PROFILE_NAME"],
      profile_uuid: ENV["PROFILE_UUID"]
    )

    build_ios_app(
      scheme: "logoxr",
      workspace: './platforms/visionos/<your-scheme>.xcworkspace',
      export_method: "app-store",
      output_directory: "./dist/ipas",
      output_name: "<your-scheme>.ipa",
      build_path: "./dist/archives"
    )
  end

  desc 'Ship to Testflight.'
  lane :beta do
    build

    changelog_from_git_commits

    upload_to_testflight(
      beta_app_feedback_email: ENV["APPLE_EMAIL"],
      beta_app_description: "",
      demo_account_required: false,
      distribute_external: false,
      groups: ["<your-qa-group>"],
      notify_external_testers: false,
      ipa: "dist/ipas/<your-scheme>.ipa",
      skip_waiting_for_build_processing: true,
      beta_app_review_info: {
        contact_email: ENV["APPLE_EMAIL"],
        contact_first_name: "<Your first name>",
        contact_last_name: "<Your last name>",
        contact_phone: ENV["CONTACT_PHONE"]
      }
    )
  end
end
